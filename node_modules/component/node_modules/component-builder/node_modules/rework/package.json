{
  "name": "rework",
  "version": "0.7.0",
  "description": "CSS manipulations built on CSSOM",
  "keywords": [
    "css",
    "manipulation",
    "preprocess",
    "transform"
  ],
  "author": {
    "name": "TJ Holowaychuk",
    "email": "tj@vision-media.ca"
  },
  "bin": {
    "rework": "./bin/rework"
  },
  "dependencies": {
    "css": "1.0.5",
    "commander": "1.0.4"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "main": "index",
  "readme": "# rework\n\n  CSS manipulations built on [node-css](//github.com/visionmedia/node-css),\n  allowing you to automate vendor prefixing, create your own properties,\n  inline images, anything you can imagine!\n\n## Installation\n\nwith node:\n\n    $ npm install rework\n\nor in the browser:\n\n    $ component install visionmedia/rework\n\n## rework(1)\n\n```js\n\nUsage: rework [options]\n\nOptions:\n\n  -h, --help            output usage information\n  -V, --version         output the version number\n  -v, --vendors <list>  specify list of vendors\n\n```\n\nfor example:\n\n```\n$ rework -v webkit,moz < my.css > my.reworked.css\n```\n\n## API\n\n### rework(css)\n\n  Return a new `Rework` instance for the given string of `css`.\n\n### Rework#vendors(prefixes)\n\n  Define vendor `prefixes` that plugins may utilize,\n  however most plugins do and should accept direct passing\n  of vendor prefixes as well.\n\n### Rework#use(fn)\n\n  Use the given plugin `fn`. A rework \"plugin\" is simply\n  a function accepting the stylesheet object and `Rework` instance,\n  view the definitions in `./lib/plugins` for examples.\n\n### Rework#toString(options)\n\n  Return the string representation of the manipulated css. Optionally\n  you may compress the output with `.toString({ compress: true })`\n\n## Plugins\n\n  The following plugins are bundled with `rework`:\n\n### .ease()\n\n  Adds the following list of additional easing functions:\n\n  - `ease-in-out-back` -- `cubic-bezier(0.680, -0.550, 0.265, 1.550)`\n  - `ease-in-out-circ` -- `cubic-bezier(0.785, 0.135, 0.150, 0.860)`\n  - `ease-in-out-expo` -- `cubic-bezier(1.000, 0.000, 0.000, 1.000)`\n  - `ease-in-out-sine` -- `cubic-bezier(0.445, 0.050, 0.550, 0.950)`\n  - `ease-in-out-quint` -- `cubic-bezier(0.860, 0.000, 0.070, 1.000)`\n  - `ease-in-out-quart` -- `cubic-bezier(0.770, 0.000, 0.175, 1.000)`\n  - `ease-in-out-cubic` -- `cubic-bezier(0.645, 0.045, 0.355, 1.000)`\n  - `ease-in-out-quad` -- `cubic-bezier(0.455, 0.030, 0.515, 0.955)`\n  - `ease-out-back` -- `cubic-bezier(0.175, 0.885, 0.320, 1.275)`\n  - `ease-out-circ` -- `cubic-bezier(0.075, 0.820, 0.165, 1.000)`\n  - `ease-out-expo` -- `cubic-bezier(0.190, 1.000, 0.220, 1.000)`\n  - `ease-out-sine` -- `cubic-bezier(0.390, 0.575, 0.565, 1.000)`\n  - `ease-out-quint` -- `cubic-bezier(0.230, 1.000, 0.320, 1.000)`\n  - `ease-out-quart` -- `cubic-bezier(0.165, 0.840, 0.440, 1.000)`\n  - `ease-out-cubic` -- `cubic-bezier(0.215, 0.610, 0.355, 1.000)`\n  - `ease-out-quad` -- `cubic-bezier(0.250, 0.460, 0.450, 0.940)`\n  - `ease-in-back` -- `cubic-bezier(0.600, -0.280, 0.735, 0.045)`\n  - `ease-in-circ` -- `cubic-bezier(0.600, 0.040, 0.980, 0.335)`\n  - `ease-in-expo` -- `cubic-bezier(0.950, 0.050, 0.795, 0.035)`\n  - `ease-in-sine` -- `cubic-bezier(0.470, 0.000, 0.745, 0.715)`\n  - `ease-in-quint` -- `cubic-bezier(0.755, 0.050, 0.855, 0.060)`\n  - `ease-in-quart` -- `cubic-bezier(0.895, 0.030, 0.685, 0.220)`\n  - `ease-in-cubic` -- `cubic-bezier(0.550, 0.055, 0.675, 0.190)`\n  - `ease-in-quad` -- `cubic-bezier(0.550, 0.085, 0.680, 0.530)`\n\n  To view them online visit [easings.net](http://easings.net/).\n\n### .at2x([vendors])\n\n  Add retina support for images, with optional `vendor` prefixes,\n  defaulting to `.vendors()`.\n\n```css\nlogo {\n  background-image: url('/public/images/logo.png')\n}\n```\n\nyields:\n\n```css\nlogo {\n  background-image: url('/public/images/logo.png')\n}\n\n@media all and (-webkit-min-device-pixel-ratio: 1.5) {\n  .logo {\n    background-image: url(\"/public/images/logo@2x.png\")\n  }\n}\n```\n\n### .prefix(property|properties, [vendors])\n\n  Prefix `property` or array of `properties` with optional `vendors` defaulting to `.vendors()`.\n\n```css\n.button {\n  border-radius: 5px;\n}\n```\n\nyields:\n\n```css\n.button {\n  -webkit-border-radius: 5px;\n  -moz-border-radius: 5px;\n  border-radius: 5px;\n}\n```\n\n### .prefixValue(value, [vendors])\n\n  Prefix `value` with optional `vendors` defaulting to `.vendors()`.\n\n```css\nbutton {\n  transition: height, transform 2s, width 0.3s linear;\n}\n```\n\nyields:\n\n```css\nbutton {\n  -webkit-transition: height, -webkit-transform 2s, width 0.3s linear;\n  -moz-transition: height, -moz-transform 2s, width 0.3s linear;\n  transition: height, transform 2s, width 0.3s linear\n}\n```\n\n### .prefixSelectors(string)\n\n  Prefix selectors with the given `string`.\n\n```css\nh1 {\n  font-weight: bold;\n}\n\na {\n  text-decoration: none;\n  color: #ddd;\n}\n```\n\nyields:\n\n```css\n#dialog h1 {\n  font-weight: bold;\n}\n\n#dialog a {\n  text-decoration: none;\n  color: #ddd;\n}\n```\n\n### .opacity()\n\n  Add IE opacity support.\n\n```css\nul {\n  opacity: 1 !important;\n}\n```\n\nyields:\n\n```css\nul {\n  opacity: 1 !important;\n  -ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100) !important;\n  filter: alpha(opacity=100) !important\n}\n```\n\n### .url(callback)\n\n  Map `url()` calls, useful for inlining images as data-uris, converting\n  relative paths to absolute etc.\n\n```js\nfunction rewrite(url) {\n  return 'http://example.com' + url;\n}\n\nrework(str)\n  .use(rework.url(rewrite))\n  .toString()\n```\n\n### .vars()\n\n  Add variable support. Note that this does not cascade like the CSS variable\n  spec does, thus this is _not_ some sort of fallback mechanism, just a useful\n  feature.\n\n```css\n:root {\n  var-header-color: #06c;\n  var-main-color: #c06;\n}\n\ndiv {\n  var-accent-background: linear-gradient(to top, var(main-color), white);\n}\n\nh1 {\n  background-color: var(header-color);\n}\n\n.content {\n  background: var(accent-background) !important;\n}\n```\n\n  yields:\n\n```css\n:root {\n  var-header-color: #06c;\n  var-main-color: #c06\n}\n\ndiv {\n  var-accent-background: linear-gradient(to top, #c06, white)\n}\n\nh1 {\n  background-color: #06c\n}\n\n.content {\n  background: linear-gradient(to top, #c06, white) !important\n}\n```\n\n### .keyframes([vendors])\n\n  Prefix __@keyframes__ with `vendors` defaulting to `.vendors()`.\n  Ordering with `.keyframes()` is important, as other plugins\n  may traverse into the newly generated rules, for example the\n  following will allow `.prefix()` to prefix keyframe `border-radius`\n  property, `.prefix()` is also smart about which keyframes definition\n  it is within, and will not add extraneous vendor definitions.\n\n```js\nvar css = rework(read('examples/keyframes.css', 'utf8'))\n  .vendors(['-webkit-', '-moz-'])\n  .use(rework.keyframes())\n  .use(rework.prefix('border-radius'))\n  .toString()\n```\n\n```css\n@keyframes animation {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n```\n\nyields:\n\n```css\n@keyframes animation {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n\n@-webkit-keyframes animation {\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n}\n```\n\n## Example\n\nexample.js:\n\n```js\nvar rework = require('rework')\n  , read = require('fs').readFileSync\n  , str = read('example.css', 'utf8');\n\nvar css = rework(str)\n  .vendors(['-webkit-', '-moz-'])\n  .use(rework.keyframes())\n  .use(rework.prefix('border-radius'))\n  .toString()\n\nconsole.log(css);\n```\n\nexample.css:\n\n```css\n@keyframes animation {\n  from { opacity: 0; border-radius: 5px }\n  to { opacity: 1; border-radius: 5px }\n}\n```\n\nstdout:\n\n```css\n@keyframes animation {\n  from {\n    opacity: 0;\n    border-radius: 5px\n  }\n\n  to {\n    opacity: 1;\n    border-radius: 5px\n  }\n}\n\n@-webkit-keyframes animation {\n  from {\n    opacity: 0;\n    -webkit-border-radius: 5px;\n    border-radius: 5px\n  }\n\n  to {\n    opacity: 1;\n    -webkit-border-radius: 5px;\n    border-radius: 5px\n  }\n}\n\n@-moz-keyframes animation {\n  from {\n    opacity: 0;\n    -moz-border-radius: 5px;\n    border-radius: 5px\n  }\n\n  to {\n    opacity: 1;\n    -moz-border-radius: 5px;\n    border-radius: 5px\n  }\n}\n```\n\n## Example Plugin\n\n  Suppose for example you wanted to create your own\n  properties for positions, allowing you to write\n  them as follows:\n\n```css\n\n#logo {\n  absolute: top left;\n}\n\n#logo {\n  relative: top 5px left;\n}\n\n#logo {\n  fixed: top 5px left 10px;\n}\n```\n\nyielding:\n\n```css\n#logo {\n  position: absolute;\n  top: 0;\n  left: 0\n}\n\n#logo {\n  position: relative;\n  top: 5px;\n  left: 0\n}\n\n#logo {\n  position: fixed;\n  top: 5px;\n  left: 10px\n}\n```\n\n This is how you could define the plugin:\n\n```js\n\nvar rework = require('rework')\n  , read = require('fs').readFileSync;\n\nfunction positions() {\n  var positions = ['absolute', 'relative', 'fixed'];\n\n  return function(style){\n    style.rules.forEach(function(rule){\n      rule.declarations.forEach(function(decl, i){\n        if (!~positions.indexOf(decl.property)) return;\n        var args = decl.value.split(/\\s+/);\n        var arg, n;\n\n        // remove original\n        rule.declarations.splice(i, 1);\n\n        // position prop\n        rule.declarations.push({\n          property: 'position',\n          value: decl.property\n        });\n\n        // position\n        while (args.length) {\n          arg = args.shift();\n          n = parseFloat(args[0]) ? args.shift() : 0;\n          rule.declarations.push({\n            property: arg,\n            value: n\n          });\n        }\n        \n      });\n    });\n  }\n}\n\nvar css = rework(read('positions.css', 'utf8'))\n  .use(positions())\n  .toString()\n\nconsole.log(css);\n```\n\n## Links\n\n  - Nodejitsu rework [web service](http://rework.jit.su/) \n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "_id": "rework@0.7.0",
  "dist": {
    "shasum": "dba0aa816b19683c293fec6248d443158ffcdca5"
  },
  "_from": "rework@0.7.0"
}
